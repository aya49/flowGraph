% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02_flowgraph_features.R
\name{fg_feat_node_norm}
\alias{fg_feat_node_norm}
\title{Generates normalized count node feature.}
\usage{
fg_feat_node_norm(
  fg,
  norm_ind = 0,
  norm_layer = 3,
  norm_path = NULL,
  no_cores = 1,
  overwrite = FALSE,
  ...
)
}
\arguments{
\item{fg}{flowGraph object.}

\item{norm_ind}{An integer or a string. If \code{normalize=TRUE},
 \code{norm_ind} is the index or \code{rowname} of the reference sample
 used to normalize counts; it can also be one of the following.
\itemize{
  \item{\code{0}: function will define the reference sample as the one with
   the median total cell count; if there is a "class" column in \code{meta}
   containing the "control" string, then it will consider only those samples
   that correspond to this control class.}
  \item{\code{NULL}: don't normalize.}
}}

\item{norm_layer}{An integer indiciating which layers'
cell populations should be used
to normalize count; set as \code{NULL} to use all cell populations.}

\item{norm_path}{The path to which to save plots visualizing
count normalization for each sample; set as \code{NULL} to not save plots.}

\item{no_cores}{An integer indicating how many cores to parallelize on.
normalized count node feature if it exists.}

\item{overwrite}{A logical variable indicating whether to
overwrite the existing normalized count node feature.}

\item{...}{Other parameters used in the \code{calcNormFactors} function
of the \code{edgeR} package. See \code{\link[flowGraph]{tmm}}.}
}
\value{
flowGraph object containing the normalized count node feature.
}
\description{
Generates the normalized count node feature and returns it
 inside the returned flowGraph object. Note this function uses a modified
version of the \code{calcNormFactors} function from the \code{edgeR} package.
}
\details{
Given a flowGraph object, \code{fg_feat_node_norm} returns the same
 flowGraph object with an additional normalized count \code{count_norm}
 \code{node} feature.
 The normalized count feature is made using the \code{count} \code{node}
 feature.
}
\examples{

 no_cores <- 1
 data(fg_data_pos30)
 fg <- flowGraph(fg_data_pos30$count, class=fg_data_pos30$meta$class,
                 prop=FALSE, specenr=FALSE, normalize=FALSE,
                 no_cores=no_cores)

 fg <- fg_feat_node_norm(fg)

}
\references{
\insertRef{robinson2010scaling}{flowGraph}
}
\seealso{
\code{\link[flowGraph]{flowGraph-class}}
 \code{\link[flowGraph]{fg_feat_node_prop}}
 \code{\link[flowGraph]{fg_feat_node_specenr}}
 \code{\link[flowGraph]{fg_add_feature}}
 \code{\link[flowGraph]{fg_get_feature}}
 \code{\link[flowGraph]{fg_rm_feature}}
 \code{\link[flowGraph]{fg_get_feature_desc}}
}
